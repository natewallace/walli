//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SalesForceData.SalesForceAPI.Apex {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://soap.sforce.com/2006/08/apex", ConfigurationName="SalesForceAPI.Apex.ApexPortType")]
    public interface ApexPortType {
        
        // CODEGEN: Generating message contract since message compileAndTestRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SalesForceData.SalesForceAPI.Apex.compileAndTestResponse compileAndTest(SalesForceData.SalesForceAPI.Apex.compileAndTestRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<SalesForceData.SalesForceAPI.Apex.compileAndTestResponse> compileAndTestAsync(SalesForceData.SalesForceAPI.Apex.compileAndTestRequest1 request);
        
        // CODEGEN: Generating message contract since message compileClassesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SalesForceData.SalesForceAPI.Apex.compileClassesResponse compileClasses(SalesForceData.SalesForceAPI.Apex.compileClassesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<SalesForceData.SalesForceAPI.Apex.compileClassesResponse> compileClassesAsync(SalesForceData.SalesForceAPI.Apex.compileClassesRequest request);
        
        // CODEGEN: Generating message contract since message compileTriggersRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SalesForceData.SalesForceAPI.Apex.compileTriggersResponse compileTriggers(SalesForceData.SalesForceAPI.Apex.compileTriggersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<SalesForceData.SalesForceAPI.Apex.compileTriggersResponse> compileTriggersAsync(SalesForceData.SalesForceAPI.Apex.compileTriggersRequest request);
        
        // CODEGEN: Generating message contract since message executeAnonymousRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SalesForceData.SalesForceAPI.Apex.executeAnonymousResponse executeAnonymous(SalesForceData.SalesForceAPI.Apex.executeAnonymousRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<SalesForceData.SalesForceAPI.Apex.executeAnonymousResponse> executeAnonymousAsync(SalesForceData.SalesForceAPI.Apex.executeAnonymousRequest request);
        
        // CODEGEN: Generating message contract since message runTestsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SalesForceData.SalesForceAPI.Apex.runTestsResponse runTests(SalesForceData.SalesForceAPI.Apex.runTestsRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<SalesForceData.SalesForceAPI.Apex.runTestsResponse> runTestsAsync(SalesForceData.SalesForceAPI.Apex.runTestsRequest1 request);
        
        // CODEGEN: Generating message contract since message wsdlToApexRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SalesForceData.SalesForceAPI.Apex.wsdlToApexResponse wsdlToApex(SalesForceData.SalesForceAPI.Apex.wsdlToApexRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<SalesForceData.SalesForceAPI.Apex.wsdlToApexResponse> wsdlToApexAsync(SalesForceData.SalesForceAPI.Apex.wsdlToApexRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class SessionHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string sessionIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
                this.RaisePropertyChanged("sessionId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class WsdlToApexResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] apexScriptsField;
        
        private string[] errorsField;
        
        private bool successField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("apexScripts", Order=0)]
        public string[] apexScripts {
            get {
                return this.apexScriptsField;
            }
            set {
                this.apexScriptsField = value;
                this.RaisePropertyChanged("apexScripts");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("errors", Order=1)]
        public string[] errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
                this.RaisePropertyChanged("errors");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("success");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class NamespacePackagePair : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string namespaceField;
        
        private string packageNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string @namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
                this.RaisePropertyChanged("namespace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string packageName {
            get {
                return this.packageNameField;
            }
            set {
                this.packageNameField = value;
                this.RaisePropertyChanged("packageName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class WsdlToApexInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private NamespacePackagePair[] mappingField;
        
        private string wsdlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("mapping", Order=0)]
        public NamespacePackagePair[] mapping {
            get {
                return this.mappingField;
            }
            set {
                this.mappingField = value;
                this.RaisePropertyChanged("mapping");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string wsdl {
            get {
                return this.wsdlField;
            }
            set {
                this.wsdlField = value;
                this.RaisePropertyChanged("wsdl");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class ExecuteAnonymousResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int columnField;
        
        private string compileProblemField;
        
        private bool compiledField;
        
        private string exceptionMessageField;
        
        private string exceptionStackTraceField;
        
        private int lineField;
        
        private bool successField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int column {
            get {
                return this.columnField;
            }
            set {
                this.columnField = value;
                this.RaisePropertyChanged("column");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public string compileProblem {
            get {
                return this.compileProblemField;
            }
            set {
                this.compileProblemField = value;
                this.RaisePropertyChanged("compileProblem");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool compiled {
            get {
                return this.compiledField;
            }
            set {
                this.compiledField = value;
                this.RaisePropertyChanged("compiled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string exceptionMessage {
            get {
                return this.exceptionMessageField;
            }
            set {
                this.exceptionMessageField = value;
                this.RaisePropertyChanged("exceptionMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string exceptionStackTrace {
            get {
                return this.exceptionStackTraceField;
            }
            set {
                this.exceptionStackTraceField = value;
                this.RaisePropertyChanged("exceptionStackTrace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int line {
            get {
                return this.lineField;
            }
            set {
                this.lineField = value;
                this.RaisePropertyChanged("line");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("success");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class PackageVersion : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int majorNumberField;
        
        private int minorNumberField;
        
        private string namespaceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int majorNumber {
            get {
                return this.majorNumberField;
            }
            set {
                this.majorNumberField = value;
                this.RaisePropertyChanged("majorNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int minorNumber {
            get {
                return this.minorNumberField;
            }
            set {
                this.minorNumberField = value;
                this.RaisePropertyChanged("minorNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string @namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
                this.RaisePropertyChanged("namespace");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class LogInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private LogCategory categoryField;
        
        private LogCategoryLevel levelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public LogCategory category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
                this.RaisePropertyChanged("category");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public LogCategoryLevel level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("level");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public enum LogCategory {
        
        /// <remarks/>
        Db,
        
        /// <remarks/>
        Workflow,
        
        /// <remarks/>
        Validation,
        
        /// <remarks/>
        Callout,
        
        /// <remarks/>
        Apex_code,
        
        /// <remarks/>
        Apex_profiling,
        
        /// <remarks/>
        Visualforce,
        
        /// <remarks/>
        System,
        
        /// <remarks/>
        All,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public enum LogCategoryLevel {
        
        /// <remarks/>
        Internal,
        
        /// <remarks/>
        Finest,
        
        /// <remarks/>
        Finer,
        
        /// <remarks/>
        Fine,
        
        /// <remarks/>
        Debug,
        
        /// <remarks/>
        Info,
        
        /// <remarks/>
        Warn,
        
        /// <remarks/>
        Error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class CompileTriggerResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int bodyCrcField;
        
        private bool bodyCrcFieldSpecified;
        
        private int columnField;
        
        private string idField;
        
        private int lineField;
        
        private string nameField;
        
        private string problemField;
        
        private bool successField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int bodyCrc {
            get {
                return this.bodyCrcField;
            }
            set {
                this.bodyCrcField = value;
                this.RaisePropertyChanged("bodyCrc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bodyCrcSpecified {
            get {
                return this.bodyCrcFieldSpecified;
            }
            set {
                this.bodyCrcFieldSpecified = value;
                this.RaisePropertyChanged("bodyCrcSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int column {
            get {
                return this.columnField;
            }
            set {
                this.columnField = value;
                this.RaisePropertyChanged("column");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int line {
            get {
                return this.lineField;
            }
            set {
                this.lineField = value;
                this.RaisePropertyChanged("line");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string problem {
            get {
                return this.problemField;
            }
            set {
                this.problemField = value;
                this.RaisePropertyChanged("problem");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("success");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class RunTestSuccess : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string methodNameField;
        
        private string nameField;
        
        private string namespaceField;
        
        private double timeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string methodName {
            get {
                return this.methodNameField;
            }
            set {
                this.methodNameField = value;
                this.RaisePropertyChanged("methodName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string @namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
                this.RaisePropertyChanged("namespace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public double time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
                this.RaisePropertyChanged("time");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class RunTestFailure : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string messageField;
        
        private string methodNameField;
        
        private string nameField;
        
        private string namespaceField;
        
        private string stackTraceField;
        
        private double timeField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string methodName {
            get {
                return this.methodNameField;
            }
            set {
                this.methodNameField = value;
                this.RaisePropertyChanged("methodName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public string @namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
                this.RaisePropertyChanged("namespace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public string stackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
                this.RaisePropertyChanged("stackTrace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public double time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
                this.RaisePropertyChanged("time");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("type");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class CodeCoverageWarning : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string messageField;
        
        private string nameField;
        
        private string namespaceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string @namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
                this.RaisePropertyChanged("namespace");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class CodeLocation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int columnField;
        
        private int lineField;
        
        private int numExecutionsField;
        
        private double timeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int column {
            get {
                return this.columnField;
            }
            set {
                this.columnField = value;
                this.RaisePropertyChanged("column");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int line {
            get {
                return this.lineField;
            }
            set {
                this.lineField = value;
                this.RaisePropertyChanged("line");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int numExecutions {
            get {
                return this.numExecutionsField;
            }
            set {
                this.numExecutionsField = value;
                this.RaisePropertyChanged("numExecutions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
                this.RaisePropertyChanged("time");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class CodeCoverageResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private CodeLocation[] locationsNotCoveredField;
        
        private string nameField;
        
        private string namespaceField;
        
        private int numLocationsField;
        
        private int numLocationsNotCoveredField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("locationsNotCovered", Order=1)]
        public CodeLocation[] locationsNotCovered {
            get {
                return this.locationsNotCoveredField;
            }
            set {
                this.locationsNotCoveredField = value;
                this.RaisePropertyChanged("locationsNotCovered");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public string @namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
                this.RaisePropertyChanged("namespace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int numLocations {
            get {
                return this.numLocationsField;
            }
            set {
                this.numLocationsField = value;
                this.RaisePropertyChanged("numLocations");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int numLocationsNotCovered {
            get {
                return this.numLocationsNotCoveredField;
            }
            set {
                this.numLocationsNotCoveredField = value;
                this.RaisePropertyChanged("numLocationsNotCovered");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("type");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class RunTestsResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CodeCoverageResult[] codeCoverageField;
        
        private CodeCoverageWarning[] codeCoverageWarningsField;
        
        private RunTestFailure[] failuresField;
        
        private int numFailuresField;
        
        private int numTestsRunField;
        
        private RunTestSuccess[] successesField;
        
        private double totalTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("codeCoverage", Order=0)]
        public CodeCoverageResult[] codeCoverage {
            get {
                return this.codeCoverageField;
            }
            set {
                this.codeCoverageField = value;
                this.RaisePropertyChanged("codeCoverage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("codeCoverageWarnings", Order=1)]
        public CodeCoverageWarning[] codeCoverageWarnings {
            get {
                return this.codeCoverageWarningsField;
            }
            set {
                this.codeCoverageWarningsField = value;
                this.RaisePropertyChanged("codeCoverageWarnings");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("failures", Order=2)]
        public RunTestFailure[] failures {
            get {
                return this.failuresField;
            }
            set {
                this.failuresField = value;
                this.RaisePropertyChanged("failures");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int numFailures {
            get {
                return this.numFailuresField;
            }
            set {
                this.numFailuresField = value;
                this.RaisePropertyChanged("numFailures");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int numTestsRun {
            get {
                return this.numTestsRunField;
            }
            set {
                this.numTestsRunField = value;
                this.RaisePropertyChanged("numTestsRun");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("successes", Order=5)]
        public RunTestSuccess[] successes {
            get {
                return this.successesField;
            }
            set {
                this.successesField = value;
                this.RaisePropertyChanged("successes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public double totalTime {
            get {
                return this.totalTimeField;
            }
            set {
                this.totalTimeField = value;
                this.RaisePropertyChanged("totalTime");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class DeleteApexResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string problemField;
        
        private bool successField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string problem {
            get {
                return this.problemField;
            }
            set {
                this.problemField = value;
                this.RaisePropertyChanged("problem");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("success");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class CompileClassResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int bodyCrcField;
        
        private bool bodyCrcFieldSpecified;
        
        private int columnField;
        
        private string idField;
        
        private int lineField;
        
        private string nameField;
        
        private string problemField;
        
        private bool successField;
        
        private string[] warningsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int bodyCrc {
            get {
                return this.bodyCrcField;
            }
            set {
                this.bodyCrcField = value;
                this.RaisePropertyChanged("bodyCrc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bodyCrcSpecified {
            get {
                return this.bodyCrcFieldSpecified;
            }
            set {
                this.bodyCrcFieldSpecified = value;
                this.RaisePropertyChanged("bodyCrcSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int column {
            get {
                return this.columnField;
            }
            set {
                this.columnField = value;
                this.RaisePropertyChanged("column");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int line {
            get {
                return this.lineField;
            }
            set {
                this.lineField = value;
                this.RaisePropertyChanged("line");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string problem {
            get {
                return this.problemField;
            }
            set {
                this.problemField = value;
                this.RaisePropertyChanged("problem");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("success");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("warnings", Order=7)]
        public string[] warnings {
            get {
                return this.warningsField;
            }
            set {
                this.warningsField = value;
                this.RaisePropertyChanged("warnings");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class CompileAndTestResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CompileClassResult[] classesField;
        
        private DeleteApexResult[] deleteClassesField;
        
        private DeleteApexResult[] deleteTriggersField;
        
        private RunTestsResult runTestsResultField;
        
        private bool successField;
        
        private CompileTriggerResult[] triggersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("classes", Order=0)]
        public CompileClassResult[] classes {
            get {
                return this.classesField;
            }
            set {
                this.classesField = value;
                this.RaisePropertyChanged("classes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deleteClasses", Order=1)]
        public DeleteApexResult[] deleteClasses {
            get {
                return this.deleteClassesField;
            }
            set {
                this.deleteClassesField = value;
                this.RaisePropertyChanged("deleteClasses");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deleteTriggers", Order=2)]
        public DeleteApexResult[] deleteTriggers {
            get {
                return this.deleteTriggersField;
            }
            set {
                this.deleteTriggersField = value;
                this.RaisePropertyChanged("deleteTriggers");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public RunTestsResult runTestsResult {
            get {
                return this.runTestsResultField;
            }
            set {
                this.runTestsResultField = value;
                this.RaisePropertyChanged("runTestsResult");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("success");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("triggers", Order=5)]
        public CompileTriggerResult[] triggers {
            get {
                return this.triggersField;
            }
            set {
                this.triggersField = value;
                this.RaisePropertyChanged("triggers");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class RunTestsRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool allTestsField;
        
        private string[] classesField;
        
        private string namespaceField;
        
        private string[] packagesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool allTests {
            get {
                return this.allTestsField;
            }
            set {
                this.allTestsField = value;
                this.RaisePropertyChanged("allTests");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("classes", Order=1)]
        public string[] classes {
            get {
                return this.classesField;
            }
            set {
                this.classesField = value;
                this.RaisePropertyChanged("classes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string @namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
                this.RaisePropertyChanged("namespace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("packages", Order=3)]
        public string[] packages {
            get {
                return this.packagesField;
            }
            set {
                this.packagesField = value;
                this.RaisePropertyChanged("packages");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class CompileAndTestRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool checkOnlyField;
        
        private string[] classesField;
        
        private string[] deleteClassesField;
        
        private string[] deleteTriggersField;
        
        private RunTestsRequest runTestsRequestField;
        
        private string[] triggersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool checkOnly {
            get {
                return this.checkOnlyField;
            }
            set {
                this.checkOnlyField = value;
                this.RaisePropertyChanged("checkOnly");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("classes", Order=1)]
        public string[] classes {
            get {
                return this.classesField;
            }
            set {
                this.classesField = value;
                this.RaisePropertyChanged("classes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deleteClasses", Order=2)]
        public string[] deleteClasses {
            get {
                return this.deleteClassesField;
            }
            set {
                this.deleteClassesField = value;
                this.RaisePropertyChanged("deleteClasses");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("deleteTriggers", Order=3)]
        public string[] deleteTriggers {
            get {
                return this.deleteTriggersField;
            }
            set {
                this.deleteTriggersField = value;
                this.RaisePropertyChanged("deleteTriggers");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public RunTestsRequest runTestsRequest {
            get {
                return this.runTestsRequestField;
            }
            set {
                this.runTestsRequestField = value;
                this.RaisePropertyChanged("runTestsRequest");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("triggers", Order=5)]
        public string[] triggers {
            get {
                return this.triggersField;
            }
            set {
                this.triggersField = value;
                this.RaisePropertyChanged("triggers");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class DebuggingHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private LogInfo[] categoriesField;
        
        private LogType debugLevelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("categories", Order=0)]
        public LogInfo[] categories {
            get {
                return this.categoriesField;
            }
            set {
                this.categoriesField = value;
                this.RaisePropertyChanged("categories");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public LogType debugLevel {
            get {
                return this.debugLevelField;
            }
            set {
                this.debugLevelField = value;
                this.RaisePropertyChanged("debugLevel");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
    public enum LogType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Debugonly,
        
        /// <remarks/>
        Db,
        
        /// <remarks/>
        Profiling,
        
        /// <remarks/>
        Callout,
        
        /// <remarks/>
        Detail,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class CallOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string clientField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string client {
            get {
                return this.clientField;
            }
            set {
                this.clientField = value;
                this.RaisePropertyChanged("client");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class DebuggingInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string debugLogField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string debugLog {
            get {
                return this.debugLogField;
            }
            set {
                this.debugLogField = value;
                this.RaisePropertyChanged("debugLog");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="compileAndTest", WrapperNamespace="http://soap.sforce.com/2006/08/apex", IsWrapped=true)]
    public partial class compileAndTestRequest1 {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.DebuggingHeader DebuggingHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        [System.Xml.Serialization.XmlArrayItemAttribute("packageVersions", IsNullable=false)]
        public SalesForceData.SalesForceAPI.Apex.PackageVersion[] PackageVersionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/2006/08/apex", Order=0)]
        public SalesForceData.SalesForceAPI.Apex.CompileAndTestRequest CompileAndTestRequest;
        
        public compileAndTestRequest1() {
        }
        
        public compileAndTestRequest1(SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader, SalesForceData.SalesForceAPI.Apex.DebuggingHeader DebuggingHeader, SalesForceData.SalesForceAPI.Apex.PackageVersion[] PackageVersionHeader, SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions, SalesForceData.SalesForceAPI.Apex.CompileAndTestRequest CompileAndTestRequest) {
            this.SessionHeader = SessionHeader;
            this.DebuggingHeader = DebuggingHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.CallOptions = CallOptions;
            this.CompileAndTestRequest = CompileAndTestRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="compileAndTestResponse", WrapperNamespace="http://soap.sforce.com/2006/08/apex", IsWrapped=true)]
    public partial class compileAndTestResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.DebuggingInfo DebuggingInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/2006/08/apex", Order=0)]
        public SalesForceData.SalesForceAPI.Apex.CompileAndTestResult result;
        
        public compileAndTestResponse() {
        }
        
        public compileAndTestResponse(SalesForceData.SalesForceAPI.Apex.DebuggingInfo DebuggingInfo, SalesForceData.SalesForceAPI.Apex.CompileAndTestResult result) {
            this.DebuggingInfo = DebuggingInfo;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="compileClasses", WrapperNamespace="http://soap.sforce.com/2006/08/apex", IsWrapped=true)]
    public partial class compileClassesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        [System.Xml.Serialization.XmlArrayItemAttribute("packageVersions", IsNullable=false)]
        public SalesForceData.SalesForceAPI.Apex.PackageVersion[] PackageVersionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/2006/08/apex", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("scripts")]
        public string[] scripts;
        
        public compileClassesRequest() {
        }
        
        public compileClassesRequest(SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader, SalesForceData.SalesForceAPI.Apex.PackageVersion[] PackageVersionHeader, SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions, string[] scripts) {
            this.SessionHeader = SessionHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.CallOptions = CallOptions;
            this.scripts = scripts;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="compileClassesResponse", WrapperNamespace="http://soap.sforce.com/2006/08/apex", IsWrapped=true)]
    public partial class compileClassesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/2006/08/apex", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("result")]
        public SalesForceData.SalesForceAPI.Apex.CompileClassResult[] result;
        
        public compileClassesResponse() {
        }
        
        public compileClassesResponse(SalesForceData.SalesForceAPI.Apex.CompileClassResult[] result) {
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="compileTriggers", WrapperNamespace="http://soap.sforce.com/2006/08/apex", IsWrapped=true)]
    public partial class compileTriggersRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        [System.Xml.Serialization.XmlArrayItemAttribute("packageVersions", IsNullable=false)]
        public SalesForceData.SalesForceAPI.Apex.PackageVersion[] PackageVersionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/2006/08/apex", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("scripts")]
        public string[] scripts;
        
        public compileTriggersRequest() {
        }
        
        public compileTriggersRequest(SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader, SalesForceData.SalesForceAPI.Apex.PackageVersion[] PackageVersionHeader, SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions, string[] scripts) {
            this.SessionHeader = SessionHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.CallOptions = CallOptions;
            this.scripts = scripts;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="compileTriggersResponse", WrapperNamespace="http://soap.sforce.com/2006/08/apex", IsWrapped=true)]
    public partial class compileTriggersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/2006/08/apex", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("result")]
        public SalesForceData.SalesForceAPI.Apex.CompileTriggerResult[] result;
        
        public compileTriggersResponse() {
        }
        
        public compileTriggersResponse(SalesForceData.SalesForceAPI.Apex.CompileTriggerResult[] result) {
            this.result = result;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class AllowFieldTruncationHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool allowFieldTruncationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool allowFieldTruncation {
            get {
                return this.allowFieldTruncationField;
            }
            set {
                this.allowFieldTruncationField = value;
                this.RaisePropertyChanged("allowFieldTruncation");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://soap.sforce.com/2006/08/apex")]
    public partial class DisableFeedTrackingHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool disableFeedTrackingField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool disableFeedTracking {
            get {
                return this.disableFeedTrackingField;
            }
            set {
                this.disableFeedTrackingField = value;
                this.RaisePropertyChanged("disableFeedTracking");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="executeAnonymous", WrapperNamespace="http://soap.sforce.com/2006/08/apex", IsWrapped=true)]
    public partial class executeAnonymousRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.DebuggingHeader DebuggingHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        [System.Xml.Serialization.XmlArrayItemAttribute("packageVersions", IsNullable=false)]
        public SalesForceData.SalesForceAPI.Apex.PackageVersion[] PackageVersionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.AllowFieldTruncationHeader AllowFieldTruncationHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.DisableFeedTrackingHeader DisableFeedTrackingHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/2006/08/apex", Order=0)]
        public string String;
        
        public executeAnonymousRequest() {
        }
        
        public executeAnonymousRequest(SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader, SalesForceData.SalesForceAPI.Apex.DebuggingHeader DebuggingHeader, SalesForceData.SalesForceAPI.Apex.PackageVersion[] PackageVersionHeader, SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions, SalesForceData.SalesForceAPI.Apex.AllowFieldTruncationHeader AllowFieldTruncationHeader, SalesForceData.SalesForceAPI.Apex.DisableFeedTrackingHeader DisableFeedTrackingHeader, string String) {
            this.SessionHeader = SessionHeader;
            this.DebuggingHeader = DebuggingHeader;
            this.PackageVersionHeader = PackageVersionHeader;
            this.CallOptions = CallOptions;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            this.String = String;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="executeAnonymousResponse", WrapperNamespace="http://soap.sforce.com/2006/08/apex", IsWrapped=true)]
    public partial class executeAnonymousResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.DebuggingInfo DebuggingInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/2006/08/apex", Order=0)]
        public SalesForceData.SalesForceAPI.Apex.ExecuteAnonymousResult result;
        
        public executeAnonymousResponse() {
        }
        
        public executeAnonymousResponse(SalesForceData.SalesForceAPI.Apex.DebuggingInfo DebuggingInfo, SalesForceData.SalesForceAPI.Apex.ExecuteAnonymousResult result) {
            this.DebuggingInfo = DebuggingInfo;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="runTests", WrapperNamespace="http://soap.sforce.com/2006/08/apex", IsWrapped=true)]
    public partial class runTestsRequest1 {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.DebuggingHeader DebuggingHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/2006/08/apex", Order=0)]
        public SalesForceData.SalesForceAPI.Apex.RunTestsRequest RunTestsRequest;
        
        public runTestsRequest1() {
        }
        
        public runTestsRequest1(SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader, SalesForceData.SalesForceAPI.Apex.DebuggingHeader DebuggingHeader, SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions, SalesForceData.SalesForceAPI.Apex.RunTestsRequest RunTestsRequest) {
            this.SessionHeader = SessionHeader;
            this.DebuggingHeader = DebuggingHeader;
            this.CallOptions = CallOptions;
            this.RunTestsRequest = RunTestsRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="runTestsResponse", WrapperNamespace="http://soap.sforce.com/2006/08/apex", IsWrapped=true)]
    public partial class runTestsResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.DebuggingInfo DebuggingInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/2006/08/apex", Order=0)]
        public SalesForceData.SalesForceAPI.Apex.RunTestsResult result;
        
        public runTestsResponse() {
        }
        
        public runTestsResponse(SalesForceData.SalesForceAPI.Apex.DebuggingInfo DebuggingInfo, SalesForceData.SalesForceAPI.Apex.RunTestsResult result) {
            this.DebuggingInfo = DebuggingInfo;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="wsdlToApex", WrapperNamespace="http://soap.sforce.com/2006/08/apex", IsWrapped=true)]
    public partial class wsdlToApexRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/2006/08/apex")]
        public SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/2006/08/apex", Order=0)]
        public SalesForceData.SalesForceAPI.Apex.WsdlToApexInfo info;
        
        public wsdlToApexRequest() {
        }
        
        public wsdlToApexRequest(SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader, SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions, SalesForceData.SalesForceAPI.Apex.WsdlToApexInfo info) {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.info = info;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="wsdlToApexResponse", WrapperNamespace="http://soap.sforce.com/2006/08/apex", IsWrapped=true)]
    public partial class wsdlToApexResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/2006/08/apex", Order=0)]
        public SalesForceData.SalesForceAPI.Apex.WsdlToApexResult result;
        
        public wsdlToApexResponse() {
        }
        
        public wsdlToApexResponse(SalesForceData.SalesForceAPI.Apex.WsdlToApexResult result) {
            this.result = result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ApexPortTypeChannel : SalesForceData.SalesForceAPI.Apex.ApexPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApexPortTypeClient : System.ServiceModel.ClientBase<SalesForceData.SalesForceAPI.Apex.ApexPortType>, SalesForceData.SalesForceAPI.Apex.ApexPortType {
        
        public ApexPortTypeClient() {
        }
        
        public ApexPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApexPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApexPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApexPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SalesForceData.SalesForceAPI.Apex.compileAndTestResponse SalesForceData.SalesForceAPI.Apex.ApexPortType.compileAndTest(SalesForceData.SalesForceAPI.Apex.compileAndTestRequest1 request) {
            return base.Channel.compileAndTest(request);
        }
        
        public SalesForceData.SalesForceAPI.Apex.DebuggingInfo compileAndTest(SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader, SalesForceData.SalesForceAPI.Apex.DebuggingHeader DebuggingHeader, SalesForceData.SalesForceAPI.Apex.PackageVersion[] PackageVersionHeader, SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions, SalesForceData.SalesForceAPI.Apex.CompileAndTestRequest CompileAndTestRequest, out SalesForceData.SalesForceAPI.Apex.CompileAndTestResult result) {
            SalesForceData.SalesForceAPI.Apex.compileAndTestRequest1 inValue = new SalesForceData.SalesForceAPI.Apex.compileAndTestRequest1();
            inValue.SessionHeader = SessionHeader;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.CallOptions = CallOptions;
            inValue.CompileAndTestRequest = CompileAndTestRequest;
            SalesForceData.SalesForceAPI.Apex.compileAndTestResponse retVal = ((SalesForceData.SalesForceAPI.Apex.ApexPortType)(this)).compileAndTest(inValue);
            result = retVal.result;
            return retVal.DebuggingInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SalesForceData.SalesForceAPI.Apex.compileAndTestResponse> SalesForceData.SalesForceAPI.Apex.ApexPortType.compileAndTestAsync(SalesForceData.SalesForceAPI.Apex.compileAndTestRequest1 request) {
            return base.Channel.compileAndTestAsync(request);
        }
        
        public System.Threading.Tasks.Task<SalesForceData.SalesForceAPI.Apex.compileAndTestResponse> compileAndTestAsync(SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader, SalesForceData.SalesForceAPI.Apex.DebuggingHeader DebuggingHeader, SalesForceData.SalesForceAPI.Apex.PackageVersion[] PackageVersionHeader, SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions, SalesForceData.SalesForceAPI.Apex.CompileAndTestRequest CompileAndTestRequest) {
            SalesForceData.SalesForceAPI.Apex.compileAndTestRequest1 inValue = new SalesForceData.SalesForceAPI.Apex.compileAndTestRequest1();
            inValue.SessionHeader = SessionHeader;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.CallOptions = CallOptions;
            inValue.CompileAndTestRequest = CompileAndTestRequest;
            return ((SalesForceData.SalesForceAPI.Apex.ApexPortType)(this)).compileAndTestAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SalesForceData.SalesForceAPI.Apex.compileClassesResponse SalesForceData.SalesForceAPI.Apex.ApexPortType.compileClasses(SalesForceData.SalesForceAPI.Apex.compileClassesRequest request) {
            return base.Channel.compileClasses(request);
        }
        
        public SalesForceData.SalesForceAPI.Apex.CompileClassResult[] compileClasses(SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader, SalesForceData.SalesForceAPI.Apex.PackageVersion[] PackageVersionHeader, SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions, string[] scripts) {
            SalesForceData.SalesForceAPI.Apex.compileClassesRequest inValue = new SalesForceData.SalesForceAPI.Apex.compileClassesRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.CallOptions = CallOptions;
            inValue.scripts = scripts;
            SalesForceData.SalesForceAPI.Apex.compileClassesResponse retVal = ((SalesForceData.SalesForceAPI.Apex.ApexPortType)(this)).compileClasses(inValue);
            return retVal.result;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SalesForceData.SalesForceAPI.Apex.compileClassesResponse> SalesForceData.SalesForceAPI.Apex.ApexPortType.compileClassesAsync(SalesForceData.SalesForceAPI.Apex.compileClassesRequest request) {
            return base.Channel.compileClassesAsync(request);
        }
        
        public System.Threading.Tasks.Task<SalesForceData.SalesForceAPI.Apex.compileClassesResponse> compileClassesAsync(SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader, SalesForceData.SalesForceAPI.Apex.PackageVersion[] PackageVersionHeader, SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions, string[] scripts) {
            SalesForceData.SalesForceAPI.Apex.compileClassesRequest inValue = new SalesForceData.SalesForceAPI.Apex.compileClassesRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.CallOptions = CallOptions;
            inValue.scripts = scripts;
            return ((SalesForceData.SalesForceAPI.Apex.ApexPortType)(this)).compileClassesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SalesForceData.SalesForceAPI.Apex.compileTriggersResponse SalesForceData.SalesForceAPI.Apex.ApexPortType.compileTriggers(SalesForceData.SalesForceAPI.Apex.compileTriggersRequest request) {
            return base.Channel.compileTriggers(request);
        }
        
        public SalesForceData.SalesForceAPI.Apex.CompileTriggerResult[] compileTriggers(SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader, SalesForceData.SalesForceAPI.Apex.PackageVersion[] PackageVersionHeader, SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions, string[] scripts) {
            SalesForceData.SalesForceAPI.Apex.compileTriggersRequest inValue = new SalesForceData.SalesForceAPI.Apex.compileTriggersRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.CallOptions = CallOptions;
            inValue.scripts = scripts;
            SalesForceData.SalesForceAPI.Apex.compileTriggersResponse retVal = ((SalesForceData.SalesForceAPI.Apex.ApexPortType)(this)).compileTriggers(inValue);
            return retVal.result;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SalesForceData.SalesForceAPI.Apex.compileTriggersResponse> SalesForceData.SalesForceAPI.Apex.ApexPortType.compileTriggersAsync(SalesForceData.SalesForceAPI.Apex.compileTriggersRequest request) {
            return base.Channel.compileTriggersAsync(request);
        }
        
        public System.Threading.Tasks.Task<SalesForceData.SalesForceAPI.Apex.compileTriggersResponse> compileTriggersAsync(SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader, SalesForceData.SalesForceAPI.Apex.PackageVersion[] PackageVersionHeader, SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions, string[] scripts) {
            SalesForceData.SalesForceAPI.Apex.compileTriggersRequest inValue = new SalesForceData.SalesForceAPI.Apex.compileTriggersRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.CallOptions = CallOptions;
            inValue.scripts = scripts;
            return ((SalesForceData.SalesForceAPI.Apex.ApexPortType)(this)).compileTriggersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SalesForceData.SalesForceAPI.Apex.executeAnonymousResponse SalesForceData.SalesForceAPI.Apex.ApexPortType.executeAnonymous(SalesForceData.SalesForceAPI.Apex.executeAnonymousRequest request) {
            return base.Channel.executeAnonymous(request);
        }
        
        public SalesForceData.SalesForceAPI.Apex.DebuggingInfo executeAnonymous(SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader, SalesForceData.SalesForceAPI.Apex.DebuggingHeader DebuggingHeader, SalesForceData.SalesForceAPI.Apex.PackageVersion[] PackageVersionHeader, SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions, SalesForceData.SalesForceAPI.Apex.AllowFieldTruncationHeader AllowFieldTruncationHeader, SalesForceData.SalesForceAPI.Apex.DisableFeedTrackingHeader DisableFeedTrackingHeader, string String, out SalesForceData.SalesForceAPI.Apex.ExecuteAnonymousResult result) {
            SalesForceData.SalesForceAPI.Apex.executeAnonymousRequest inValue = new SalesForceData.SalesForceAPI.Apex.executeAnonymousRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.CallOptions = CallOptions;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.String = String;
            SalesForceData.SalesForceAPI.Apex.executeAnonymousResponse retVal = ((SalesForceData.SalesForceAPI.Apex.ApexPortType)(this)).executeAnonymous(inValue);
            result = retVal.result;
            return retVal.DebuggingInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SalesForceData.SalesForceAPI.Apex.executeAnonymousResponse> SalesForceData.SalesForceAPI.Apex.ApexPortType.executeAnonymousAsync(SalesForceData.SalesForceAPI.Apex.executeAnonymousRequest request) {
            return base.Channel.executeAnonymousAsync(request);
        }
        
        public System.Threading.Tasks.Task<SalesForceData.SalesForceAPI.Apex.executeAnonymousResponse> executeAnonymousAsync(SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader, SalesForceData.SalesForceAPI.Apex.DebuggingHeader DebuggingHeader, SalesForceData.SalesForceAPI.Apex.PackageVersion[] PackageVersionHeader, SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions, SalesForceData.SalesForceAPI.Apex.AllowFieldTruncationHeader AllowFieldTruncationHeader, SalesForceData.SalesForceAPI.Apex.DisableFeedTrackingHeader DisableFeedTrackingHeader, string String) {
            SalesForceData.SalesForceAPI.Apex.executeAnonymousRequest inValue = new SalesForceData.SalesForceAPI.Apex.executeAnonymousRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.PackageVersionHeader = PackageVersionHeader;
            inValue.CallOptions = CallOptions;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.DisableFeedTrackingHeader = DisableFeedTrackingHeader;
            inValue.String = String;
            return ((SalesForceData.SalesForceAPI.Apex.ApexPortType)(this)).executeAnonymousAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SalesForceData.SalesForceAPI.Apex.runTestsResponse SalesForceData.SalesForceAPI.Apex.ApexPortType.runTests(SalesForceData.SalesForceAPI.Apex.runTestsRequest1 request) {
            return base.Channel.runTests(request);
        }
        
        public SalesForceData.SalesForceAPI.Apex.DebuggingInfo runTests(SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader, SalesForceData.SalesForceAPI.Apex.DebuggingHeader DebuggingHeader, SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions, SalesForceData.SalesForceAPI.Apex.RunTestsRequest RunTestsRequest, out SalesForceData.SalesForceAPI.Apex.RunTestsResult result) {
            SalesForceData.SalesForceAPI.Apex.runTestsRequest1 inValue = new SalesForceData.SalesForceAPI.Apex.runTestsRequest1();
            inValue.SessionHeader = SessionHeader;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.CallOptions = CallOptions;
            inValue.RunTestsRequest = RunTestsRequest;
            SalesForceData.SalesForceAPI.Apex.runTestsResponse retVal = ((SalesForceData.SalesForceAPI.Apex.ApexPortType)(this)).runTests(inValue);
            result = retVal.result;
            return retVal.DebuggingInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SalesForceData.SalesForceAPI.Apex.runTestsResponse> SalesForceData.SalesForceAPI.Apex.ApexPortType.runTestsAsync(SalesForceData.SalesForceAPI.Apex.runTestsRequest1 request) {
            return base.Channel.runTestsAsync(request);
        }
        
        public System.Threading.Tasks.Task<SalesForceData.SalesForceAPI.Apex.runTestsResponse> runTestsAsync(SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader, SalesForceData.SalesForceAPI.Apex.DebuggingHeader DebuggingHeader, SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions, SalesForceData.SalesForceAPI.Apex.RunTestsRequest RunTestsRequest) {
            SalesForceData.SalesForceAPI.Apex.runTestsRequest1 inValue = new SalesForceData.SalesForceAPI.Apex.runTestsRequest1();
            inValue.SessionHeader = SessionHeader;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.CallOptions = CallOptions;
            inValue.RunTestsRequest = RunTestsRequest;
            return ((SalesForceData.SalesForceAPI.Apex.ApexPortType)(this)).runTestsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SalesForceData.SalesForceAPI.Apex.wsdlToApexResponse SalesForceData.SalesForceAPI.Apex.ApexPortType.wsdlToApex(SalesForceData.SalesForceAPI.Apex.wsdlToApexRequest request) {
            return base.Channel.wsdlToApex(request);
        }
        
        public SalesForceData.SalesForceAPI.Apex.WsdlToApexResult wsdlToApex(SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader, SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions, SalesForceData.SalesForceAPI.Apex.WsdlToApexInfo info) {
            SalesForceData.SalesForceAPI.Apex.wsdlToApexRequest inValue = new SalesForceData.SalesForceAPI.Apex.wsdlToApexRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.info = info;
            SalesForceData.SalesForceAPI.Apex.wsdlToApexResponse retVal = ((SalesForceData.SalesForceAPI.Apex.ApexPortType)(this)).wsdlToApex(inValue);
            return retVal.result;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SalesForceData.SalesForceAPI.Apex.wsdlToApexResponse> SalesForceData.SalesForceAPI.Apex.ApexPortType.wsdlToApexAsync(SalesForceData.SalesForceAPI.Apex.wsdlToApexRequest request) {
            return base.Channel.wsdlToApexAsync(request);
        }
        
        public System.Threading.Tasks.Task<SalesForceData.SalesForceAPI.Apex.wsdlToApexResponse> wsdlToApexAsync(SalesForceData.SalesForceAPI.Apex.SessionHeader SessionHeader, SalesForceData.SalesForceAPI.Apex.CallOptions CallOptions, SalesForceData.SalesForceAPI.Apex.WsdlToApexInfo info) {
            SalesForceData.SalesForceAPI.Apex.wsdlToApexRequest inValue = new SalesForceData.SalesForceAPI.Apex.wsdlToApexRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.info = info;
            return ((SalesForceData.SalesForceAPI.Apex.ApexPortType)(this)).wsdlToApexAsync(inValue);
        }
    }
}
